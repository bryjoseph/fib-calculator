upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

server {
  listen 80;

  # first server check for the redis server pass through
  # this removes any request starting with /api/
  location / {
    proxy_pass http://client;
  }

  # allowing websocket connection so the client can speak directly to the
  # react server via the nginx proxy
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # second server check for the /api/ requests
  # this is using a regex command to chop the /api/ piece and pass on the rest
  # of the request and BREAK before running any additional server config rules
  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}